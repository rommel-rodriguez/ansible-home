# SPDX-License-Identifier: MIT-0
---
- name: Ensure font installation directory exists
  become: true
  ansible.builtin.file:
    path: "{{ basics_terminator_font_install_dir }}"
    state: directory
    mode: "0755"

- name: Create temporary directory for font archives
  become: true
  ansible.builtin.tempfile:
    state: directory
    suffix: terminator-fonts
  register: basics_terminator_font_tempdir

- name: Download font archives (retry each)
  become: true
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ basics_terminator_font_tempdir.path }}/{{ item.url | basename }}"
    mode: "0644"
    timeout: 30
  register: basics_terminator_font_downloads
  retries: 3
  delay: 5
  until: basics_terminator_font_downloads is succeeded
  failed_when: false                # <- donâ€™t fail the whole task on a 404
  loop: "{{ basics_terminator_font_archives | default([], true) }}"
  loop_control:
    label: "{{ item.name }} ({{ item.variant }})"

- name: Warn about failed downloads
  ansible.builtin.debug:
    msg: "Skipped {{ item.item.name }} ({{ item.item.variant | default('default') }}): {{ item.msg | default(item.status_code | string) }}"
  loop: "{{ basics_terminator_font_downloads.results | default([], true) }}"
  when: item.failed | default(false)
  loop_control:
    label: "{{ item.item.name }} ({{ item.item.variant | default('default') }})"
  

- name: Ensure font variant directory exists
  become: true
  ansible.builtin.file:
    path: "{{ basics_terminator_font_install_dir }}/{{ item.item.name | lower | regex_replace('[^a-z0-9]+', '-') }}/{{ item.item.variant }}"
    state: directory
    mode: "0755"
  loop: "{{ basics_terminator_font_downloads.results | default([], true) }}"
  loop_control:
    label: "{{ item.item.name }} ({{ item.item.variant  | default('default')}})"
  when:
    - not item.failed | default(false)
    - not item.skipped | default(false)

- name: Install downloaded fonts
  become: true
  ansible.builtin.unarchive:
    src: "{{ item.dest }}"
    dest: "{{ basics_terminator_font_install_dir }}/{{ item.item.name | lower | regex_replace('[^a-z0-9]+', '-') }}/{{ item.item.variant }}"
    remote_src: true
  loop: "{{ basics_terminator_font_downloads.results | default([], true) }}"
  loop_control:
    label: "{{ item.item.name }} ({{ item.item.variant  | default('default') }})"
  notify: Rebuild font cache
  register: basics_terminator_font_installations
  when:
    - not item.failed | default(false)
    - not item.skipped | default(false)

# - name: Refresh font cache
#   become: true
#   ansible.builtin.command: fc-cache -f
#   when: basics_terminator_font_installations is changed
#   changed_when: true


- name: Remove temporary font directory
  become: true
  ansible.builtin.file:
    path: "{{ basics_terminator_font_tempdir.path }}"
    state: absent
  when: basics_terminator_font_tempdir.path is defined

- name: Ensure Terminator configuration directory exists
  become: true
  ansible.builtin.file:
    path: "/home/{{ terminator_user }}/.config/terminator"
    state: directory
    owner: "{{ terminator_user }}"
    group: "{{ terminator_user }}"
    mode: "0700"
  loop: "{{ basics_terminator_users }}"
  loop_control:
    loop_var: terminator_user
    label: "{{ terminator_user }}"

- name: Deploy Terminator configuration
  become: true
  ansible.builtin.template:
    src: terminator/config.j2
    dest: "/home/{{ terminator_user }}/.config/terminator/config"
    owner: "{{ terminator_user }}"
    group: "{{ terminator_user }}"
    mode: "0600"
  loop: "{{ basics_terminator_users }}"
  loop_control:
    loop_var: terminator_user
    label: "{{ terminator_user }}"
