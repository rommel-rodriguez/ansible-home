---
- name: Bootstrap hosts for Ansible
  hosts: ubuntu_all
  gather_facts: false
  serial: 1
  become: true

  vars:
    # Path on the control node to the public key that will be authorized for the 'ansible' user
    bootstrap_pubkey_path: "{{ lookup('env', 'HOME') ~ '/.ssh/id_ansible.pub' }}"
    bootstrap_user: "ansible"
    bootstrap_group: "sudo"   # Ubuntu derivatives

  pre_tasks:
    - name: Check if python3 is present
      ansible.builtin.raw: test -x /usr/bin/python3
      register: _py3_check
      changed_when: false
      failed_when: _py3_check.rc not in [0, 1]
      tags: [bootstrap]

    - name: Install python3 (only if missing)
      ansible.builtin.raw: |
        export DEBIAN_FRONTEND=noninteractive
        apt-get update -y
        apt-get install -y python3
      when: _py3_check.rc == 1
      changed_when: true
      tags: [bootstrap]

    - name: Gather facts now that Python is available
      ansible.builtin.setup:
      tags: [bootstrap]

  tasks:
    - name: Ensure admin user exists
      ansible.builtin.user:
        name: "{{ bootstrap_user }}"
        comment: Ansible Automation
        groups: "{{ bootstrap_group }}"
        append: true
        shell: /bin/bash
        create_home: true
        state: present
      tags: [bootstrap, user]

    - name: Authorize automation public key for admin user
      ansible.builtin.authorized_key:
        user: "{{ bootstrap_user }}"
        state: present
        key: "{{ lookup('file', bootstrap_pubkey_path) }}"
        manage_dir: true
      tags: [bootstrap, ssh]

    - name: Allow passwordless sudo for admin user (NOPASSWD)
      ansible.builtin.copy:
        dest: /etc/sudoers.d/99-ansible
        content: "{{ bootstrap_user }} ALL=(ALL) NOPASSWD:ALL\n"
        owner: root
        group: root
        mode: '0440'
        validate: 'visudo -cf %s'
      tags: [bootstrap, sudo]
